# Generated by Django 3.2 on 2021-04-21 13:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True, unique=True)),
                ('morada', models.CharField(blank=True, db_column='Morada', max_length=255, null=True)),
            ],
            options={
                'db_table': 'Campus',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
                ('estado', models.CharField(blank=True, db_column='Estado', max_length=255, null=True)),
                ('descrição', models.CharField(blank=True, db_column='Descrição', max_length=255, null=True)),
                ('data', models.DateField(blank=True, db_column='Data', null=True)),
                ('hora', models.TimeField(blank=True, db_column='Hora', null=True)),
                ('duração', models.IntegerField(blank=True, db_column='Duração', null=True)),
                ('local', models.IntegerField(blank=True, db_column='Local', null=True)),
                ('valor', models.FloatField(db_column='Valor')),
                ('evento_pagoid', models.IntegerField(db_column='Evento pagoID')),
            ],
            options={
                'db_table': 'Evento',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'Feedback',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Formulário',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
                ('publico', models.IntegerField(db_column='Publico')),
            ],
            options={
                'db_table': 'Formulário',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Inscrição',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('utilizador_eventoid', models.IntegerField(db_column='Utilizador_EventoID')),
                ('checkin', models.IntegerField(db_column='CheckIn')),
                ('valido', models.IntegerField(db_column='Valido')),
                ('eventoid', models.ForeignKey(db_column='EventoID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.evento')),
            ],
            options={
                'db_table': 'Inscrição',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Mensagem',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('remetente', models.CharField(blank=True, db_column='Remetente', max_length=255, null=True)),
                ('receptor', models.CharField(blank=True, db_column='Receptor', max_length=255, null=True)),
                ('conteúdo', models.CharField(blank=True, db_column='Conteúdo', max_length=255, null=True)),
                ('data', models.DateField(blank=True, db_column='Data', null=True)),
                ('assunto', models.CharField(blank=True, db_column='Assunto', max_length=255, null=True)),
            ],
            options={
                'db_table': 'Mensagem',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Pergunta',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('pergunta', models.CharField(blank=True, db_column='Pergunta', max_length=255, null=True)),
                ('obrigatório', models.IntegerField(db_column='Obrigatório')),
            ],
            options={
                'db_table': 'Pergunta',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Recurso',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
                ('estado', models.CharField(blank=True, db_column='Estado', max_length=255, null=True)),
            ],
            options={
                'db_table': 'Recurso',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TipoDeEquipamento',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.IntegerField(blank=True, db_column='Nome', null=True, unique=True)),
            ],
            options={
                'db_table': 'Tipo de equipamento',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TipoDeEvento',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
            ],
            options={
                'db_table': 'Tipo de evento',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TipoDeFormulário',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
            ],
            options={
                'db_table': 'Tipo de Formulário',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TipoDePergunta',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
            ],
            options={
                'db_table': 'Tipo de pergunta',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TipoDeRecurso',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.IntegerField(blank=True, db_column='Nome', null=True, unique=True)),
            ],
            options={
                'db_table': 'Tipo de recurso',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TipoDeServiço',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.IntegerField(blank=True, db_column='Nome', null=True, unique=True)),
            ],
            options={
                'db_table': 'Tipo de serviço',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Utilizador',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=255, null=True)),
                ('telefone', models.CharField(blank=True, db_column='Telefone', max_length=255, null=True)),
                ('password', models.CharField(blank=True, db_column='Password', max_length=255, null=True)),
                ('username', models.CharField(blank=True, db_column='Username', max_length=255, null=True)),
            ],
            options={
                'db_table': 'Utilizador',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Administrador',
            fields=[
                ('utilizadorid', models.OneToOneField(db_column='UtilizadorID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.utilizador')),
            ],
            options={
                'db_table': 'Administrador',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Participante',
            fields=[
                ('utilizadorid', models.OneToOneField(db_column='UtilizadorID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.utilizador')),
            ],
            options={
                'db_table': 'Participante',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Proponente',
            fields=[
                ('utilizadorid', models.OneToOneField(db_column='UtilizadorID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.utilizador')),
            ],
            options={
                'db_table': 'Proponente',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='UtilizadorMensagem',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('mensagemid', models.ForeignKey(db_column='MensagemID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.mensagem')),
                ('utilizadorid', models.ForeignKey(db_column='UtilizadorID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.utilizador')),
            ],
            options={
                'db_table': 'Utilizador_Mensagem',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Resposta',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('resposta', models.CharField(blank=True, db_column='Resposta', max_length=2048, null=True)),
                ('eventoid', models.ForeignKey(db_column='EventoID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.evento')),
                ('feedbackid', models.ForeignKey(db_column='FeedbackID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.feedback')),
                ('inscriçãoid', models.ForeignKey(db_column='InscriçãoID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.inscrição')),
                ('perguntaid', models.ForeignKey(db_column='PerguntaID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.pergunta')),
            ],
            options={
                'db_table': 'Resposta',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Requisição',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('dia_inicial', models.DateField(blank=True, db_column='Dia inicial', null=True)),
                ('hora_inicial', models.TimeField(blank=True, db_column='Hora inicial', null=True)),
                ('dia_final', models.DateField(blank=True, db_column='Dia final', null=True)),
                ('hora_final', models.TimeField(blank=True, db_column='Hora final', null=True)),
                ('eventoid', models.OneToOneField(db_column='EventoID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.evento')),
                ('recursoid', models.OneToOneField(db_column='RecursoID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.recurso')),
            ],
            options={
                'db_table': 'Requisição',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='pergunta',
            name='tipo_de_perguntaid',
            field=models.ForeignKey(db_column='Tipo de perguntaID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.tipodepergunta'),
        ),
        migrations.CreateModel(
            name='PedidoDeRecurso',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('quantidade', models.IntegerField(db_column='Quantidade')),
                ('dia_inicial', models.DateField(blank=True, db_column='Dia inicial', null=True)),
                ('hora_inicial', models.TimeField(blank=True, db_column='Hora inicial', null=True)),
                ('dia_final', models.DateField(blank=True, db_column='Dia final', null=True)),
                ('hora_final', models.TimeField(blank=True, db_column='Hora final', null=True)),
                ('capacidade', models.IntegerField(blank=True, db_column='Capacidade', null=True)),
                ('eventoid', models.ForeignKey(db_column='EventoID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.evento')),
                ('tipo_de_equipamentoid', models.ForeignKey(db_column='Tipo de equipamentoID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.tipodeequipamento')),
                ('tipo_de_recursoid', models.ForeignKey(db_column='Tipo de recursoID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.tipoderecurso')),
                ('tipo_de_serviçoid', models.ForeignKey(db_column='Tipo de serviçoID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.tipodeserviço')),
            ],
            options={
                'db_table': 'Pedido de recurso',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Pagamento',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('divida', models.FloatField(db_column='Divida')),
                ('data', models.DateField(blank=True, db_column='Data', null=True)),
                ('hora', models.TimeField(blank=True, db_column='Hora', null=True)),
                ('inscriçãoid', models.ForeignKey(db_column='InscriçãoID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.inscrição')),
            ],
            options={
                'db_table': 'Pagamento',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='OpçãoDeResposta',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('opção', models.CharField(blank=True, db_column='Opção', max_length=255, null=True)),
                ('perguntaid', models.ForeignKey(db_column='PerguntaID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.pergunta')),
            ],
            options={
                'db_table': 'Opção de resposta',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='mensagem',
            name='utilizadorid',
            field=models.ForeignKey(db_column='UtilizadorID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.utilizador'),
        ),
        migrations.CreateModel(
            name='FormulárioPergunta',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('formulárioid', models.OneToOneField(db_column='FormulárioID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.formulário')),
                ('perguntaid', models.OneToOneField(db_column='PerguntaID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.pergunta')),
            ],
            options={
                'db_table': 'Formulário_Pergunta',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='formulário',
            name='tipo_de_eventoid',
            field=models.ForeignKey(db_column='Tipo de eventoID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.tipodeevento'),
        ),
        migrations.AddField(
            model_name='formulário',
            name='tipo_de_formulárioid',
            field=models.ForeignKey(db_column='Tipo de FormulárioID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.tipodeformulário'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='inscriçãoid',
            field=models.ForeignKey(db_column='InscriçãoID', on_delete=django.db.models.deletion.DO_NOTHING, to='main.inscrição'),
        ),
        migrations.AddField(
            model_name='evento',
            name='formuláriofeedbackid',
            field=models.ForeignKey(db_column='FormulárioFeedbackID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='feedback', to='main.formulário'),
        ),
        migrations.AddField(
            model_name='evento',
            name='formulárioinscriçãoid',
            field=models.ForeignKey(db_column='FormulárioInscriçãoID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.formulário'),
        ),
        migrations.AddField(
            model_name='evento',
            name='tipo_de_eventoid',
            field=models.ForeignKey(db_column='Tipo de eventoID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.tipodeevento'),
        ),
        migrations.CreateModel(
            name='Edificio',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome', models.CharField(blank=True, db_column='Nome', max_length=255, null=True)),
                ('campusid', models.ForeignKey(db_column='CampusID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.campus')),
            ],
            options={
                'db_table': 'Edificio',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CertificadoDeParticipação',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('nome_evento', models.CharField(blank=True, db_column='Nome evento', max_length=255, null=True)),
                ('data_emissão', models.DateField(blank=True, db_column='Data emissão', null=True)),
                ('nome_participante', models.CharField(blank=True, db_column='Nome participante', max_length=255, null=True)),
                ('publico', models.IntegerField(db_column='Publico')),
                ('eventoid', models.ForeignKey(db_column='EventoID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.evento')),
            ],
            options={
                'db_table': 'Certificado de Participação',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Serviço',
            fields=[
                ('recursoid', models.OneToOneField(db_column='RecursoID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.recurso')),
                ('tipo_de_serviçoid', models.ForeignKey(db_column='Tipo de serviçoID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.tipodeserviço')),
            ],
            options={
                'db_table': 'Serviço',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Sala',
            fields=[
                ('recursoid', models.OneToOneField(db_column='RecursoID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.recurso')),
                ('lugares', models.IntegerField(blank=True, db_column='Lugares', null=True)),
                ('edificioid', models.ForeignKey(db_column='EdificioID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.edificio')),
            ],
            options={
                'db_table': 'Sala',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='inscrição',
            name='participanteutilizadorid',
            field=models.ForeignKey(db_column='ParticipanteUtilizadorID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.participante'),
        ),
        migrations.AddField(
            model_name='evento',
            name='proponenteutilizadorid',
            field=models.ForeignKey(db_column='ProponenteUtilizadorID', default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.proponente'),
        ),
        migrations.CreateModel(
            name='Equipamento',
            fields=[
                ('recursoid', models.OneToOneField(db_column='RecursoID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='main.recurso')),
                ('tipo_de_equipamentoid', models.ForeignKey(db_column='Tipo de equipamentoID', on_delete=django.db.models.deletion.DO_NOTHING, to='main.tipodeequipamento')),
            ],
            options={
                'db_table': 'Equipamento',
                'managed': True,
            },
        ),
    ]
